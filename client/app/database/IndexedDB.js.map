{"version":3,"sources":["../../src/database/IndexedDB.js"],"names":["Negotiation","connection","openRequest","indexedDB","open","onupgradeneeded","e","console","log","target","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement","onsuccess","onerror","error","add","negotiation","Date","request","transaction","objectStore","listAll","negotiations","cursor","openCursor","current","value","_date","_quantity","_value","push","continue"],"mappings":";;;;;;AACOA,c;;;;AAEP,OAAIC,aAAa,IAAjB,C,CAHA;;AAIA,SAAMC,cAAcC,UAAUC,IAAV,CAAe,cAAf,EAA+B,CAA/B,CAApB;;AAEA;AACAF,eAAYG,eAAZ,GAA+BC,CAAD,IAAO;AACpCC,YAAQC,GAAR,CAAY,iCAAZ;AACAP,iBAAaK,EAAEG,MAAF,CAASC,MAAtB;;AAEA,QAAIT,WAAWU,gBAAX,CAA4BC,QAA5B,CAAqC,cAArC,CAAJ,EAA0D;AACzDX,gBAAWY,iBAAX,CAA6B,cAA7B;AACA;AACDZ,eAAWa,iBAAX,CAA6B,cAA7B,EAA6C;AAC5CC,oBAAe;AAD6B,KAA7C;AAGA,IAVD;AAWAb,eAAYc,SAAZ,GAAyBV,CAAD,IAAO;AAC9BC,YAAQC,GAAR,CAAY,wBAAZ;AACAP,iBAAaK,EAAEG,MAAF,CAASC,MAAtB,CAF8B,CAEA;AAC9B,IAHD;AAIAR,eAAYe,OAAZ,GAAuBX,CAAD,IAAOC,QAAQC,GAAR,CAAYF,EAAEG,MAAF,CAASS,KAArB,CAA7B;;AAEO,YAASC,GAAT,GAAe;AACrB,UAAMC,cAAc,IAAIpB,WAAJ,CAAgB,IAAIqB,IAAJ,EAAhB,EAA4B,GAA5B,EAAiC,CAAjC,CAApB;AACA,UAAMC,UAAUrB,WACdsB,WADc,CACF,CAAC,cAAD,CADE,EACgB,WADhB,EAEdC,WAFc,CAEF,cAFE,EAGdL,GAHc,CAGVC,WAHU,CAAhB;;AAKAE,YAAQN,SAAR,GAAqBV,CAAD,IAAOC,QAAQC,GAAR,CAAY,gCAAZ,CAA3B;AACAc,YAAQL,OAAR,GAAmBX,CAAD,IAAOC,QAAQC,GAAR,CAAY,4BAAZ,CAAzB;AACA;;;;AAEM,YAASiB,OAAT,GAAmB;AACzB,UAAMC,eAAe,EAArB;;AAEA,UAAMC,SAAS1B,WACbsB,WADa,CACD,CAAC,cAAD,CADC,EACiB,WADjB,EAEbC,WAFa,CAED,cAFC,EAGbI,UAHa,EAAf;;AAKAD,WAAOX,SAAP,GAAoBV,CAAD,IAAO;AACzB,WAAMuB,UAAUvB,EAAEG,MAAF,CAASC,MAAzB;;AAEA,SAAImB,OAAJ,EAAa;AACZ,YAAMT,cAAc,IAAIpB,WAAJ,CACnB6B,QAAQC,KAAR,CAAcC,KADK,EAEnBF,QAAQC,KAAR,CAAcE,SAFK,EAGnBH,QAAQC,KAAR,CAAcG,MAHK,CAApB;AAKAP,mBAAaQ,IAAb,CAAkBd,WAAlB;AACAS,cAAQM,QAAR;AACA,MARD,MAQO;AACN5B,cAAQC,GAAR,CAAYkB,YAAZ;AACA;AACD,KAdD;;AAgBAC,WAAOV,OAAP,GAAkBX,CAAD,IAAOC,QAAQC,GAAR,CAAY,YAAYF,EAAEG,MAAF,CAASS,KAAjC,CAAxB;AACA","file":"IndexedDB.js","sourcesContent":["//must to be let, it will be rewriten\r\nimport Negotiation from \"../models/negotiation/Negotiation\";\r\n\r\nlet connection = null;\r\nconst openRequest = indexedDB.open(\"cangaceirojs\", 2);\r\n\r\n//  events\r\nopenRequest.onupgradeneeded = (e) => {\r\n\tconsole.log(\"Creating or updating a database\");\r\n\tconnection = e.target.result;\r\n\r\n\tif (connection.objectStoreNames.contains(\"negotiations\")) {\r\n\t\tconnection.deleteObjectStore(\"negotiations\");\r\n\t}\r\n\tconnection.createObjectStore(\"negotiations\", {\r\n\t\tautoIncrement: true,\r\n\t});\r\n};\r\nopenRequest.onsuccess = (e) => {\r\n\tconsole.log(\"Successfully connected\");\r\n\tconnection = e.target.result; // instantiated\r\n};\r\nopenRequest.onerror = (e) => console.log(e.target.error);\r\n\r\nexport function add() {\r\n\tconst negotiation = new Negotiation(new Date(), 200, 1);\r\n\tconst request = connection\r\n\t\t.transaction([\"negotiations\"], \"readwrite\")\r\n\t\t.objectStore(\"negotiations\")\r\n\t\t.add(negotiation);\r\n\r\n\trequest.onsuccess = (e) => console.log(\"Successfully saved negotiation\");\r\n\trequest.onerror = (e) => console.log(\"Unable to save negotiation\");\r\n}\r\n\r\nexport function listAll() {\r\n\tconst negotiations = [];\r\n\r\n\tconst cursor = connection\r\n\t\t.transaction([\"negotiations\"], \"readwrite\")\r\n\t\t.objectStore(\"negotiations\")\r\n\t\t.openCursor();\r\n\r\n\tcursor.onsuccess = (e) => {\r\n\t\tconst current = e.target.result;\r\n\r\n\t\tif (current) {\r\n\t\t\tconst negotiation = new Negotiation(\r\n\t\t\t\tcurrent.value._date,\r\n\t\t\t\tcurrent.value._quantity,\r\n\t\t\t\tcurrent.value._value\r\n\t\t\t);\r\n\t\t\tnegotiations.push(negotiation);\r\n\t\t\tcurrent.continue();\r\n\t\t} else {\r\n\t\t\tconsole.log(negotiations);\r\n\t\t}\r\n\t};\r\n\r\n\tcursor.onerror = (e) => console.log(\"Error: \" + e.target.error);\r\n}\r\n"]}